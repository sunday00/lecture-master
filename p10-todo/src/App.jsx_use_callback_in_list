import { useState, useRef, useCallback } from 'react';
import { faker } from '@faker-js/faker';
import TodoTemplate from './components/TodoTemplate';
import TodoInsert from './components/TodoInsert';
import TodoList from './components/TodoList';

function createBulkTodos() {
  const array = [];
  for (let i = 1; i <= 2500; i++) {
    array.push({
      id: i,
      text: faker.name.findName(),
      checked: Math.ceil(Math.random() * 2) % 2,
    });
  }

  return array;
}

export default () => {
  const [todos, setTodos] = useState(createBulkTodos);

  const nextId = useRef(todos[todos.length - 1].id + 1);

  const onInsert = useCallback((text) => {
    const todo = {
      id: nextId.current,
      text,
      checked: false,
    };

    setTodos((todos) => todos.concat(todo));
    nextId.current++;
  }, []);

  const onDelete = useCallback((id) => {
    setTodos((todos) => todos.filter((todo) => todo.id !== id));
  }, []);

  const onToggle = useCallback((id) => {
    setTodos((todos) =>
      todos.map((todo) =>
        todo.id === id ? { ...todo, checked: !todo.checked } : todo,
      ),
    );
  }, []);

  return (
    <div className="App">
      <TodoTemplate>
        <TodoInsert onInsert={onInsert}></TodoInsert>
        <TodoList
          todos={todos}
          onRemove={onDelete}
          onToggle={onToggle}
        ></TodoList>
      </TodoTemplate>
    </div>
  );
};
